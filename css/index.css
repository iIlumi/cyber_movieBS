/* NOTE reset css */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* NOTE GLOBAL */
html,
body {
  font-family: "Roboto Condensed", sans-serif;
  color: #717171;
}

/* css cho text bị selection */
::selection {
  background-color: #ec7532;
  color: white;
}

body > section {
  padding: 75px 0;
}

/* Nếu xử lý tile tận dụng gradient underline tuy sẽ gọn code nhưng rối về xử lý ko cần thiết
Bản thân line này cũng có kích thước cố định
Nếu muốn tạo thì phải lồng span-inline block trong h2, phức tạp ko cần thiết
Bản thân h2 cũng như 2 thẻ div sẵn nhưng ko lên lồng inline block gì trong đó nữa, chỉ chứa các inline thuần dạng text thôi
*/
.title {
  color: #ec7532;

  font-size: 1.125rem;
  text-transform: uppercase;
  letter-spacing: 1.7px;

  border-bottom: 1px solid #d8d8d8;

  margin-bottom: 40px;
}

.title--white {
  color: white;
  border-bottom: 1px solid #333;
}

.title::after {
  content: "";
  display: block;
  width: 125px;
  height: 4px;

  background: linear-gradient(to right, #fbbd61, #ec7532);

  margin-top: 20px;
}

/* line style */
/* 
linear gradient
to right: trái qua phải
to left : phải qua trái
to bottom, to top
*/
.gradient-underline::after {
  content: "";
  display: block;
  height: 3px;
  width: 0;

  background: linear-gradient(to right, #fbbd61, #ec7532);
  box-shadow: 0 0 20px 0 #fbbd61;

  transition: all 0.3s;
}

.gradient-underline:hover::after {
  width: 100%;
}

.gradient-underline.active::after {
  width: 100%;
}

/* NOTE HEADER */
/* carousel__item có z-index = 1 do BS set
Sau đó xóa đi BS class background color của navbar
*/
header {
  position: absolute;
  top: 20px;
  left: 50%;

  transform: translateX(-50%);

  z-index: 2;
}

header p {
  font-size: 14px;
  font-weight: 700;
}

/* border của thẻ ul */
#movieNavBar .navbar-nav {
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
}

/* Khoan hãy thêm padding mà check hover trước để chỉnh padding sau */
/* underline và padding của thẻ a  
Như vậy sẽ giữ underline và border trùng nhau và kéo dài hết nav item
*/
#movieNavBar .navbar-nav .nav-link {
  color: white;
  letter-spacing: 3px;
  line-height: 0.8em;

  padding: 20px 24px;
}

#headerFixed {
  position: fixed;
  top: 0;
  /* đè lên z-index 15 cao nhất của carousel  */
  z-index: 16;

  background-color: #101010;
  /* 
Đưa class container vô div trong đồng thời set lại w100% do bị position fixed reset 
*/
  width: 100%;
  /* Set vị trí ban đầu kéo ngược lên trên khỏi trình duyệt
   -50% đầu tiên là thuộc tính canh center của tag header trước đó 
   (ele header sẽ bị ảnh hưởng css từ cả css từ tag header và cả class đi kèm với nó, nhưng khí đó transform lại tác động nhau !!!)
   
   Ở đây bắt buộc phải ghi thêm cả 2 vì css transform ko cho ghi bổ sung ~ giống lúc kết hợp cả transform và translate
   
   */
  transform: translate(-50%, -20%);
  /* Thêm tên cụ thể của đúng duy nhất hiệu ứng transform */
  transition: transform 0.3s;
}

/* NOTE CAROUSEL */
/* 
Gọi trực tiếp vô class vẫn OK nhưng để vậy để độ ưu tiên cao 
BS đang áp dụng position - check qua dev tool 
Tận dụng pos để center theo chiều dọc luôn
Thay vì set width kết hợp responsive phức tạp thì có thể tận dụng col của BS - 1 dạng built in respon sive
Chú ý là col phải ở trong div container
*/

section.movieCarousel {
  padding: 0;
}

#movieCarouselId .carousel-item .carousel-caption {
  top: 55%;
  left: 50%;
  transform: translate(-50%, -50%);

  text-align: left;
}

/* 
:first-child - ưu tiên thứ tự trước -> loại thẻ
:first-of-type - ưu tiên loại trước -> thứ tự sau

https://animate.style/
Dùng css style để khỏi thay đổi cấu trúc html,
Duration mặc định là 1s nếu dùng class
Chú ý animation-fill-mode trong docs, nếu ko set sẽ nhìn sai

*/
#movieCarouselId .carousel-item .carousel-caption p:first-of-type {
  color: #fbbd61;
  letter-spacing: 2px;
  font-size: 0.875rem;

  margin: 0;

  animation: fadeInDown;
  animation-duration: 1s;

  animation-delay: 0.5s;
  animation-fill-mode: both;
}

#movieCarouselId .carousel-item .carousel-caption p:last-of-type {
  font-size: 1.125rem;
  margin-bottom: 20px;

  animation: fadeInUp;
  animation-duration: 1s;
}

#movieCarouselId .carousel-item .carousel-caption h2 {
  font-size: 3.25rem;
  letter-spacing: 3px;
  margin-bottom: 3px;

  animation: fadeInDown;
  animation-duration: 1s;
}

.movieCarousel__trailer {
  animation: fadeInUp;
  animation-duration: 1s;

  animation-delay: 0.5s;
  animation-fill-mode: both;
}

/* Gọi con trực tiếp > vì trên layout sẽ có phát sinh 1 số thẻ span bên trong trailer 
Kết hợp inline-block để vừa set được kích thước vừa ko chiếm hết 1 hàng
*/
.movieCarousel__trailer > span {
  display: inline-block;
  width: 48px;
  height: 48px;

  border-radius: 50%;
  border: 2px solid white;

  font-size: 0.8rem;
  text-align: center;
  line-height: 48px;

  margin-right: 8px;
}

/* THường viền mặc định của button khá xấu nên ít để hoặc đè màu vô 
Dùng opacity sẽ bị bóng mờ trước khi phủ
Overflow hidden thì đủ, ko cần thêm opacity nữa
*/
.movieCarousel__trailer button {
  padding: 12px 24px;

  border: none;
  border-radius: 30px;

  font-size: 0.8rem;
  letter-spacing: 4px;
  color: white;

  background: linear-gradient(to right, #fbbd61, #ec7532);

  position: relative;
  overflow: hidden;
  /* Viền xanh do class btn của BS thêm vào */
  outline: none;
}

.movieCarousel__trailer button:hover {
  color: white;
}

/* Những overlay thường tại qua before để tránh tạo thành phần html giả thừa 
Kết hợp nhiều transform phải viết chung, ko được tách ra 2 cái
opacity làm mờ chữ, ko dùng
*/
.movieCarousel__trailer button::before {
  content: "";
  display: block;
  width: 110%;
  height: 100%;

  background-color: #ec7532;

  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;

  /* Chưa hover */
  transform: skewX(30deg) translateX(-110%);
  transition: all 0.3s;
}

.movieCarousel__trailer button:hover:before {
  transform: skewX(30deg) translateX(-10px);
}

/* z-index chỉ dùng được khi đi với position */
/* Chữ đã ở đúng vị trí nên chỉ cần position relative rồi dùng với z-index 
Nên sử dụng z-index tăng dần để dễ kiểm soát tương tác giữa các ele set với các ele dc css do thư viện
*/
.movieCarousel__trailer button span {
  position: relative;
  z-index: 2;
}

/* NOTE edit carousel dot */

/* 
Canh vị trí dot carousel thẳng hàng với phần content ở trên
Phải lấy tool đo khoảng cách mới dễ thấy
*/

#movieCarouselId .carousel-indicators {
  justify-content: flex-start;
  /* 
  Set flex-start nhưng
  vị trí dot vẫn chưa thẳng hàng với circle PG ở trên
  Dùng tool đo sẽ thấy rõ, trước tiên reset các thông số do class BS thêm vào trước

  Sẽ áp dụng kỹ thuật của caption vào phần dot tương tự
  -> đưa vào trong classs container
  -> reset margin do carousel BS thêm
  15px containter caption
  15px col-9
  Tuy nhiên ko cần set phía right vì chỉ canh trái

  */

  margin-left: 0;
  padding-left: 30px;

  left: 50%;
  transform: translateX(-50%);

  bottom: 10%;
}

/*

BS 4.5 background color giữa content và border sẽ có 1 viền nhỏ - zoom lên sẽ thấy 
-> do background-clip định nghĩa vùng phủ của này
-> chỉ phủ từ vùng padding trở vô
Thay vì dùng background color thì solve bằng việc chỉ ghi background
-> sẽ tự solve vấn đề background-clip vì tính chất default hết các giá trị đi kèm background
hoặc set trực tiếp background-clip: border-box;

*/

#movieCarouselId .carousel-indicators li {
  box-sizing: border-box;
  width: 10px;
  height: 10px;

  border-radius: 50%;
  border: 2px solid white;

  /* background-color: transparent; */
  background: transparent;
  opacity: 1;
  /* Cách solve 2 */
  /* background-clip: border-box; */
}

/* set clip ở đây hơi thừa vì ele con theo cha */
#movieCarouselId .carousel-indicators li.active {
  background-color: white;
  background-clip: border-box;
}

/* TODO 
check thử vị trí đặt before bên dưới các div khác xem ntn 
Cách 2 là tạo 1 div overlay rỗng, trong carousel-item và bên dưới img với class movieCarousel__overlay, ko cần content và block
*/
.carousel-item::before {
  content: "";
  display: block;
  width: 100%;
  height: 100%;

  position: absolute;
  top: 0;
  left: 0;

  background: linear-gradient(to top, black, transparent);
}

/* NOTE New In */
.newIn__title {
  text-align: center;
}

.newIn__title h3 {
  font-size: 18px;
  color: #4a4a4a;
  margin: 1rem 0;
}

.newIn__title i {
  color: #fbbd61;
}

/* 
Trước khi code nên comment trước các phần img còn lại đi để tránh bị rối giao diện
Phần new In overlay code css thuần lặp code khác nhiều,
Tuy nhiên trước refactor thì cứ vậy để code nhanh, giải quyết xong vấn đề trước
Vì skewX phải canh chỉnh lại kích thẻ nên tùy phần tử 
nếu là scss thì sẽ tiện hơn
*/

.newIn__img {
  position: relative;
  overflow: hidden;
  border-radius: 10px;
}

.newIn__overlay {
  position: absolute;
  top: 0;
  left: 0;

  width: 200%;
  height: 100%;

  background: linear-gradient(to bottom, #fbbd61, #ec7532);
  opacity: 0.9;

  transform: skewX(30deg) translateX(-150%);
  transition: 0.5s;
}

.newIn__img:hover .newIn__overlay {
  transform: skewX(30deg) translateX(-30%);
}

.newIn__play {
  position: absolute;
  top: 0;
  left: 0;

  width: 100%;
  height: 100%;

  text-align: center;
  /* 
Cách center thứ 2 
date ko bị rớt chữ, 
Canh center responsive luôn, bất chấp màn hình
*/

  display: flex;
  justify-content: center;
  align-items: center;

  opacity: 0;
  transition: all 0.3s;
}

.newIn__img:hover .newIn__play {
  opacity: 1;
}

.newIn__play i {
  width: 80px;
  height: 80px;

  border: 2px solid white;
  border-radius: 50%;

  text-align: center;
  line-height: 80px;

  transform: scale(1);
  transition: all 0.3s;
}

.newIn__play i:hover {
  transform: scale(0.9);
}

.newIn__play a {
  display: block;

  color: white;

  text-decoration: none;
  text-transform: uppercase;
  font-size: 13px;
  letter-spacing: 4px;

  margin: 1rem 0;
}

.newIn__play p {
  color: white;
}

/* 
Cách center thứ 1 phải code thêm 
2 cách có sự khác biệt
cách này sẽ khiến date rớt chữ, canh khác
*/
/* .newIn__play > div {
  position: absolute;
  left: 50%;
  top: 50%;

  transform: translate(-50%, -50%);
} */

/* NOTE SHOWTIMES */

.showTimes .nav-tabs .nav-item.show .nav-link,
.showTimes .nav-tabs .nav-link.active {
  border: none;
}

/* viền 3 cạnh xung quanh khi hover vào */
.showTimes .nav-tabs .nav-link {
  border: none;

  padding: 0;

  font-size: 18px;
  letter-spacing: 1px;
  color: #4a4a4a;
}

.showTimes .nav-tabs .nav-link.active {
  color: #ec7532;
}

/* Inspect code để thấy css làm mất border khi click vào và đè lại*/
/* Ở đây BS ko css cho focus / hpver mà chỉ css vào ele bình thường */
.showTimes .nav-tabs .nav-item {
  margin-bottom: 0;
}

.showTimes .nav-tabs .nav-link span {
  padding: 15px 30px;
  display: block;
}

#myTabContent .tab-pane .showTimes__row:not(:last-child) {
  border-bottom: 1px solid #d8d8d8;
}

.showTimes__row img {
  border-radius: 10px;
}
.showTimes__row div p:first-of-type {
  font-size: 14px;
  color: #ec7532;
  letter-spacing: 2px;

  margin-bottom: 0;
}

.showTimes__row h3 {
  font-size: 24px;
  font-weight: 300;
  letter-spacing: 1px;
  color: #101010;
}

.showTimes__row a {
  font-size: 12px;
  letter-spacing: 4px;
  color: #ec7532;

  text-decoration: none;

  transition: all 0.3s;
}

.showTimes__row a:hover {
  color: #101010;
}

.showTimes__runningTimes {
  font-size: 12px;
  letter-spacing: 1.5px;
  color: #4a4a4a;
}

.showTimes__runningTimes button {
  font-size: 14px;
  letter-spacing: 2px;

  background-color: #d8d8d8;
  color: #717171;
}

.showTimes__mins span:last-child {
  width: 33px;
  height: 33px;
  display: inline-block;

  color: white;
  background-color: #4a4a4a;

  text-align: center;
  line-height: 33px;
  font-weight: 700;

  border-radius: 50%;
}

/* NOTE COMING SOON */

.comingSoon {
  /* background-image: url(../img/slide-3.png); */
  /* 
  Check bản thân hình background đã tính chất trong suốt
  -> Hình style đặc biệt của đuôi png
  Khi đưa vào web sẽ bị màu nền của web là tráng đè vô
  -> Kết hợp các thuộc tính background để xử lý
  */
  background: url(../img/slide-3.png) #101010;
  background-size: cover;
  color: white;
}

.comingSoon__type {
  font-size: 14px;
  color: #ec7532;
  letter-spacing: 2px;
}

.comingSoon h3 {
  font-size: 34px;
  letter-spacing: 4px;
  font-weight: 400;
}

/* icon calendar được lồng bên dưới span để tránh css chung */
.comingSoon__rating > i {
  color: #fbbd61;
}

.comingSoon p {
  margin: 1rem 0;
}

.comingSoon a {
  font-size: 12px;
  letter-spacing: 4px;

  color: #ec7532;
  text-decoration: none;

  transition: all 0.3s;
}

.comingSoon a:hover {
  color: white;
}

.comingSoon__video {
  position: relative;
}

.comingSoon__video i {
  position: absolute;
  top: 50%;
  left: 50%;
  /* Nhớ copy lại translate vì transform ko đi riêng được */
  transform: translate(-50%, -50%) scale(1);
  transition: all 0.3s;

  text-align: center;
  line-height: 80px;
  font-size: 25px;

  width: 80px;
  height: 80px;

  border: 1px solid #ec7532;
  border-radius: 50%;
}

/* Nhớ copy lại translate vì transform ko đi riêng được */
.comingSoon__video:hover i {
  transform: translate(-50%, -50%) scale(0.9);
}

/* NOTE MOVIELIST */

.movieList {
  background-color: #101010;
}

/* overflow hidden để che đi phần img lòi ra khỏi border radius */
.movieList__item {
  position: relative;
  border-radius: 10px;
  overflow: hidden;
}

.movieList__overlay {
  position: absolute;
  top: 0;
  left: 0;

  width: 100%;
  height: 100%;

  background-color: #101010;
  opacity: 0.6;

  transition: all 0.3s;
}

.movieList__item:hover .movieList__overlay {
  opacity: 0;
}

/* NOTE CONTACT */
.contact__content {
  text-align: center;
}

.contact__content p:first-child {
  color: #4a4a4a;
  font-size: 23px;
  letter-spacing: 1px;
  font-weight: 300;
}

.contact__content a {
  font-size: 46px;
  color: #fbbd61;
  text-decoration: none;
}
